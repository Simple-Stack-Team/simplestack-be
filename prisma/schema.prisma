datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Organization {
  id                String    @id @default(auto()) @map("_id") @db.ObjectId
  orgName           String    
  headquarterAdress String
  employees         Employee[]
  createdAt         DateTime  @default(now())
  teamRoles         TeamRole[]
  departments       Department[]
}

model TeamRole {
  id                String        @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  organization      Organization  @relation(fields: [organizationId], references: [id])
  organizationId    String        @db.ObjectId
}

model Employee {
  id                String        @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  email             String        @unique
  password          String
  organization      Organization  @relation(fields: [organizationId], references: [id])
  organizationId    String        @db.ObjectId
  roles             Role[]        @default([EMPLOYEE])
  createdAt         DateTime      @default(now())
  managerAt         Department?   @relation("ManagerDepartment")
  department        Department?   @relation("MemberDepartment", fields: [departmentId], references: [id], onUpdate: NoAction, onDelete: NoAction)
  departmentId      String?       @db.ObjectId
}

model Department {
  id                String        @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  createdAt         DateTime      @default(now())
  organization      Organization  @relation(fields: [organizationId], references: [id])
  organizationId    String        @db.ObjectId
  managerId         String?       @db.ObjectId @unique
  manager           Employee?     @relation("ManagerDepartment", fields: [managerId], references: [id])
  members           Employee[]    @relation("MemberDepartment")
}

enum Role {
  EMPLOYEE
  PROJECT_MANAGER
  DEPARTMENT_MANAGER
  ORGANIZATION_ADMIN
}
